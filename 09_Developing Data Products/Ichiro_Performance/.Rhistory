install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
search()
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
cube(3)
cube(2)
debug(ls)
q
ls
?c()
?c()
install.packages("kernlab")
install.packages("kernlab")
library(kernlab)
data(spam)
dim(spam)
names(spam)
Baseline <- c(140, 138, 150, 148, 135)
w2 <- c(132, 135, 151, 146, 130)
t.test(Baseline, w2, paired = T)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
power.t.test(n = 100, sd = 0.04, delta = 0.01, type = one.sample, alt = two.sided)
power.t.test(n = 100, sd = 0.04, delta = 0.01, type = "one.sample", alt = "two.sided")
power.t.test(n = 100, sd = 0.04, delta = 0.01, type = "one.sample", alt = "one.sided")
power.t.test(power = 0.9, sd = 0.04, delta = 0.01, type = "one.sample", alt = "one.sided")
swirl()
library(swirl)
swirl()
install_from_swirl("Statistical_Inference")
install_from_swirl("Regression_Models")
install_from_swirl("Mathematical_Biostatistics_Boot_Camp")
install_from_swirl("R_Programming_Alt")
install_from_swirl("Data_Analysis")
swirl()
0.001*0.997
(1-0.985)*(1-0.001)
0.001*0.997/(1-0.985)*(1-0.001)
0.001*0.997/0.001*0.997+(1-0.985)*(1-0.001)
0.001*0.997/(0.001*0.997+(1-0.985)*(1-0.001))
3.5
expect_dice()
expect_dice(pmf)
expect_dice(pmf = 6)
expect_dice()
expect_dice(pmf =  )
expect_dice(6)
expect_dice(pmf = PMF)
PMF
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
(expect_dice(dice_high) + expect_dice(dice_high))/2
.5*(edh+edl)
integrate(lower = 0, upper = 2)
integrate(t^2/2, lower = 0, upper = 2)
integrate(f = t^2/2, lower = 0, upper = 2)
integrate(f = t^2/2, lower = 0, upper = 2)
integrate(myfunc, lower = 0, upper = 2)
myfunc
spop
mean(spop)
allsam
apply(allsamm, 1, mean())
apply(allsamm, 1, mean()1)
apply(allsamm, 1, mean(1))
apply(allsamm, 1, mean
)
apply(allsam, 1, mean)
smeans
mean(smeans)
source('~/.active-rstudio-document', echo=TRUE)
library(UsingR)
data("diamond")
library(ggplot2)
head(diamond)
I(diamond$carat - mean(diamond$carat)
)
I
I(diamond$carat - mean(diamond$carat))
diamond$carat - mean(diamond$carat)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
install.packages("GGally")
source('~/.active-rstudio-document', echo=TRUE)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(x ~y)
lm(y ~ x)
fit <- lm (y~x)
summary(fit)
coef(fit)
list(fit)
fit$sigma
list(summary(fit))
summary(fit)$sigma
data <- mtcars()
data <- data(mtcars)
data
data <- dataset(mtcars)
data <- datasets(mtcars)
data <- mtcars()
library(datasets)
data <- mtcars()
mtcars
fit <- lm(mtcars$mpg ~ mtcars$weight)
fit <- lm(mtcars$mpg ~ mtcars$wt)
fit
summary(fit)
newdata <- data.frame(wt=mean(mtcars$wt))
predict(fit, newdata, interval=("confidence"))
fit <- lm(mpg ~ wt, data=mtcars)
newdata <- data.frame(wt=mean(mtcars$wt))
predict(fit, newdata, interval=("confidence"))
predict(fit, 3, interval=("confidence"))
newdata <- data.frame(wt=3000/1000)
predict(fit, 3, interval=("confidence"))
predict(fit, 3, interval=("confidence"))
predict(fit, newdata, interval=("confidence"))
predict(fit, newdata, interval=("prediction"))
newdata <- data.frame(wt=1000/1000)
predict(fit, newdata, interval=("confidence"))
predict(fit, newdata, interval=("prediction"))
mtcars$wt_ton <- mtcars$wt / 2
fit <- lm(mpg ~ wt_ton, data=mtcars)
(coef <- summary(fit)$coeff)
predict(fit, newdata, interval=("confidence"))
newdata <- data.frame(wt=mean(mtcars$wt))
predict(fit, newdata, interval=("confidence"))
fit$df
library(datasets)
library(help = "datasets")
height
source('~/.active-rstudio-document', echo=TRUE)
galton
names(galton)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(UsingR)
data(galton)
library(reshape2)
library(ggplot2)
library(dplyr)
galton.m <- melt(galton, value.name = "height")
galton.m
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(galton.m)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
p
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
beta0
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?influence.measures
source('~/.active-rstudio-document', echo=TRUE)
summary(shuttle)
summary(shuttle2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(InsectSprays)
summary(InsectSprays)
str(InsectSprays)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Coef4
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(swirl)
swirl()
sum((1:6)*1/6)
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
E((edh + edl)/2)
((edh + edl)/2)
integrate(x^2/2, 0,2 )
integrate(t^2/2, 0,2 )
integrate(myfunc, 0,2 )
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
install.packages("dplyr")
install.packages("venn")
install.packages("VennDiagram")
install.packages("caret")
install.packages("ISLR")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
inTrain
head(inTain)
head(inTrain)
head(Wage)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("Hmisc")
install.packages("Hmisc")
install.packages("Hmisc")
install.packages("Hmisc")
install.packages("Hmisc")
install.packages("Hmisc")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
install.packages("caret")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
install.packages("lattice")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
install.packages("ggplot2")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
install.packages("ggplot2")
install.packages("ISLR")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
install.packages("caret")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
install.packages("Hmisc")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
install.packages("gridExtra")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
t1
prob.table(t1, 1)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/week2.R', echo=TRUE)
install.packages("kernlab")
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
summary(spem)
summary(spam)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/Basic preprocessing.R', echo=TRUE)
training
head(training)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("AppliedPredictiveModeling")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
training
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("dplyr")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(AlzheimerDisease)
source('~/.active-rstudio-document', echo=TRUE)
AlzheimerDisease
AlzheimerDisease
diagnosis
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
predictors
head(predictors)
source('~/.active-rstudio-document', echo=TRUE)
head(inTrain)
head(spam)
head(spam)
head(inTrain2)
source('~/.active-rstudio-document', echo=TRUE)
head(inTrain2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
M
cor(1:10, 2:11)
training[, -58]
head(training[, -58])
training
head(training)
structure(training)
str(training)
str(training[, -58])
cor(training[, -58])
cor(c(1,2,3), c(3,2,1))
diag(x = 1, nrow, ncol)
diag(x = 1, 3, 3)
source('~/.active-rstudio-document', echo=TRUE)
M
diag(M)
which(M > 0.8, arr.ind = T)
which(M > 0.8, arr.ind = F)
which(M > 0.8, arr.ind = T)
which(M > 0.8, arr.ind = F)
which(M > 0.8, arr.ind = T)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
prComp
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/PCA.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/PCA.R', echo=TRUE)
head(prComp$x[,1])
head(prComp)
str(prComp)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/PCA.R', echo=TRUE)
source('/Volumes/Mac_Pro_SSD_2/Google Drive/Coursera/JHU_Data_Science/08_Practical Machine Learning/week2/PCA.R', echo=TRUE)
prComp
str(prComp)
prComp$x
str(prComp$x)
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
remove.packages(devtools)
remove.packages("devtools")
library(devtools)
library(ggplot2)
install.packages("devtools")
remove.packages('ggplot2')
install.packages(ggplo2)
install.packages(ggplot2)
library(ggplot2)
q()
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
setwd("/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products")
setwd("/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/Ichiro_Performance")
shiny::runApp()
runApp()
runApp()
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
runApp()
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
Master
head(Master)
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
str(Master)
Master[, "playerID"]
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
runApp()
require(devtools)
install.packages(devtools)
install.package(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github('rCharts', 'ramnathv')
install_github("ramnathv/rCharts")
install_github('rCharts', 'ramnathv')
install_github(ramnathv/rCharts)
install_github("ramnathv/rCharts")
install_github('ramnathv/rCharts')
shiny::runApp()
install_github('ramnathv/rCharts')
install_github('ramnathv/rCharts', force = T)
library(rCHarts)
library(rCharts)
source('/Volumes/MacProHD1/Google Drive/Coursera/JHU_Data_Science/GitHub/datasciencecoursera/09_Developing Data Products/project_09.R', echo=TRUE)
runApp()
runApp()
runApp()
shiny::runApp()
